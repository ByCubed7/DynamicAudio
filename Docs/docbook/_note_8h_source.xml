<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__note_8h_source" xml:lang="en-US">
<title>Note.h</title>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 <emphasis role="preprocessor">#include&#32;&lt;cstdint&gt;</emphasis>
3 <emphasis role="preprocessor">#include&#32;&lt;cmath&gt;</emphasis>
4 <emphasis role="preprocessor">#include&#32;&lt;map&gt;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
6 
7 <emphasis role="keyword">namespace&#32;</emphasis>DynamicAudio&#32;{
8 
9 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;uint16_t&#32;NoteValueType;
10 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;NoteDurationType;
11 
12 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_dynamic_audio_1_1_note">Note</link>&#32;{
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>Value&#32;{
14 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteValueType&#32;Cf&#32;=&#32;59;&#32;<emphasis role="comment">//&#32;MIDI&#32;value&#32;for&#32;C&#32;flat</emphasis>
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteValueType&#32;C&#32;=&#32;60;&#32;<emphasis role="comment">//&#32;MIDI&#32;value&#32;for&#32;C&#32;natural</emphasis>
16 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteValueType&#32;Cs&#32;=&#32;61;&#32;<emphasis role="comment">//&#32;MIDI&#32;value&#32;for&#32;C&#32;sharp</emphasis>
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteValueType&#32;Df&#32;=&#32;61;&#32;<emphasis role="comment">//&#32;MIDI&#32;value&#32;for&#32;D&#32;flat</emphasis>
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteValueType&#32;D&#32;=&#32;62;&#32;<emphasis role="comment">//&#32;MIDI&#32;value&#32;for&#32;D&#32;natural</emphasis>
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteValueType&#32;Ds&#32;=&#32;63;&#32;<emphasis role="comment">//&#32;MIDI&#32;value&#32;for&#32;D&#32;sharp</emphasis>
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteValueType&#32;Ef&#32;=&#32;63;&#32;<emphasis role="comment">//&#32;MIDI&#32;value&#32;for&#32;E&#32;flat</emphasis>
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteValueType&#32;E&#32;=&#32;64;&#32;<emphasis role="comment">//&#32;MIDI&#32;value&#32;for&#32;E&#32;natural</emphasis>
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteValueType&#32;F&#32;=&#32;65;&#32;<emphasis role="comment">//&#32;MIDI&#32;value&#32;for&#32;F&#32;natural</emphasis>
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteValueType&#32;Fs&#32;=&#32;66;&#32;<emphasis role="comment">//&#32;MIDI&#32;value&#32;for&#32;F&#32;sharp</emphasis>
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteValueType&#32;Gf&#32;=&#32;66;&#32;<emphasis role="comment">//&#32;MIDI&#32;value&#32;for&#32;G&#32;flat</emphasis>
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteValueType&#32;G&#32;=&#32;67;&#32;<emphasis role="comment">//&#32;MIDI&#32;value&#32;for&#32;G&#32;natural</emphasis>
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteValueType&#32;Gs&#32;=&#32;68;&#32;<emphasis role="comment">//&#32;MIDI&#32;value&#32;for&#32;G&#32;sharp</emphasis>
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteValueType&#32;Af&#32;=&#32;68;&#32;<emphasis role="comment">//&#32;MIDI&#32;value&#32;for&#32;A&#32;flat</emphasis>
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteValueType&#32;A&#32;=&#32;69;&#32;<emphasis role="comment">//&#32;MIDI&#32;value&#32;for&#32;A&#32;natural&#32;(A440&#32;reference)</emphasis>
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteValueType&#32;As&#32;=&#32;70;&#32;<emphasis role="comment">//&#32;MIDI&#32;value&#32;for&#32;A&#32;sharp</emphasis>
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteValueType&#32;Bf&#32;=&#32;70;&#32;<emphasis role="comment">//&#32;MIDI&#32;value&#32;for&#32;B&#32;flat</emphasis>
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteValueType&#32;B&#32;=&#32;71;&#32;<emphasis role="comment">//&#32;MIDI&#32;value&#32;for&#32;B&#32;natural</emphasis>
32 
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteValueType&#32;Middle_C&#32;=&#32;C;
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteValueType&#32;MIDI_A440&#32;=&#32;A;
35 
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteValueType&#32;null&#32;=&#32;0;
37 
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isNull(<emphasis role="keyword">const</emphasis>&#32;NoteValueType&amp;&#32;<link linkend="_struct_dynamic_audio_1_1_note_1a495e3b2c5015739a97b00977af10b262">value</link>)&#32;{
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_dynamic_audio_1_1_note_1a495e3b2c5015739a97b00977af10b262">value</link>&#32;==&#32;null;
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
44 
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isValid(<emphasis role="keyword">const</emphasis>&#32;NoteValueType&amp;&#32;<link linkend="_struct_dynamic_audio_1_1_note_1a495e3b2c5015739a97b00977af10b262">value</link>)&#32;{
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!isNull(<link linkend="_struct_dynamic_audio_1_1_note_1a495e3b2c5015739a97b00977af10b262">value</link>);
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
51 
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;NoteValueType&#32;transpose(<emphasis role="keyword">const</emphasis>&#32;NoteValueType&amp;&#32;originalNote,&#32;<emphasis role="keyword">const</emphasis>&#32;NoteValueType&#32;semitones)&#32;{
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;originalNote&#32;+&#32;semitones;
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
59 
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
61 
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_struct_dynamic_audio_1_1_note_1ab6afeb3e78f615b0d623b5a27e5c6ce0">calculateFrequency</link>(<emphasis role="keyword">const</emphasis>&#32;NoteValueType&amp;&#32;<link linkend="_struct_dynamic_audio_1_1_note_1a495e3b2c5015739a97b00977af10b262">value</link>)&#32;{
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isNull(<link linkend="_struct_dynamic_audio_1_1_note_1a495e3b2c5015739a97b00977af10b262">value</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
70 
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MIDI&#32;note&#32;69&#32;(A440)&#32;is&#32;set&#32;to&#32;440&#32;Hz</emphasis>
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;440.0&#32;*&#32;pow(2.0,&#32;(<link linkend="_struct_dynamic_audio_1_1_note_1a495e3b2c5015739a97b00977af10b262">value</link>&#32;-&#32;69)&#32;/&#32;12.0);
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
74 
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Define&#32;the&#32;noteMap</emphasis>
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::map&lt;std::string,&#32;NoteValueType&gt;&#32;mapStringToValue;
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::map&lt;std::string,&#32;NoteValueType&gt;&#32;mapStringToValue&#32;=&#32;{
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="stringliteral">&quot;C&quot;</emphasis>,&#32;&#32;Note::Value::C},
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="stringliteral">&quot;Cs&quot;</emphasis>,&#32;Note::Value::Cs},
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="stringliteral">&quot;D&quot;</emphasis>,&#32;&#32;Note::Value::D},
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="stringliteral">&quot;Ds&quot;</emphasis>,&#32;Note::Value::Ds},
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="stringliteral">&quot;E&quot;</emphasis>,&#32;&#32;Note::Value::E},
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="stringliteral">&quot;F&quot;</emphasis>,&#32;&#32;Note::Value::F},
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="stringliteral">&quot;Fs&quot;</emphasis>,&#32;Note::Value::Fs},
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="stringliteral">&quot;G&quot;</emphasis>,&#32;&#32;Note::Value::G},
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="stringliteral">&quot;Gs&quot;</emphasis>,&#32;Note::Value::Gs},
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="stringliteral">&quot;A&quot;</emphasis>,&#32;&#32;Note::Value::A},
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="stringliteral">&quot;As&quot;</emphasis>,&#32;Note::Value::As},
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="stringliteral">&quot;B&quot;</emphasis>,&#32;&#32;Note::Value::B}
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
91 
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;</emphasis>
93 
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;NoteValueType&#32;fromString(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;noteString)&#32;{
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;it&#32;=&#32;mapStringToValue.find(noteString);
97 
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;found,&#32;return&#32;note</emphasis>
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(it&#32;!=&#32;mapStringToValue.end())
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;it-&gt;second;
101 
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Else&#32;default&#32;to&#32;null</emphasis>
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;null;
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
106 
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>Duration&#32;{
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Using&#32;the&#32;British&#32;naming&#32;convension</emphasis>
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteDurationType&#32;Maxima;
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteDurationType&#32;Long;
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteDurationType&#32;Breve;
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteDurationType&#32;Semibreve;&#32;<emphasis role="comment">//&#32;1&#32;whole&#32;note</emphasis>
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteDurationType&#32;Minim;
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteDurationType&#32;Crotchet;
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteDurationType&#32;Quaver;
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteDurationType&#32;Semiquaver;
117 
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NoteDurationType&#32;Maxima&#32;=&#32;1&#32;*&#32;8;
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NoteDurationType&#32;Long&#32;=&#32;1&#32;*&#32;4;
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NoteDurationType&#32;Breve&#32;=&#32;1&#32;*&#32;2;
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NoteDurationType&#32;Semibreve&#32;=&#32;1;&#32;<emphasis role="comment">//&#32;1&#32;whole&#32;note</emphasis>
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NoteDurationType&#32;Minim&#32;=&#32;1&#32;/&#32;2;
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NoteDurationType&#32;Crotchet&#32;=&#32;1&#32;/&#32;4;
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NoteDurationType&#32;Quaver&#32;=&#32;1&#32;/&#32;8;
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NoteDurationType&#32;Semiquaver&#32;=&#32;1&#32;/&#32;16;
126 
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;A&#32;bit&#32;excessive:</emphasis>
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteDurationType&#32;Demisemiquaver;&#32;&#32;<emphasis role="comment">//&#32;1/32</emphasis>
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteDurationType&#32;Hemidemisemiquaver;&#32;&#32;<emphasis role="comment">//&#32;1/64</emphasis>
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteDurationType&#32;Semihemidemisemiquaver;&#32;&#32;<emphasis role="comment">//&#32;1/128</emphasis>
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;NoteDurationType&#32;Demisemihemidemisemiquaver;
132 
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NoteDurationType&#32;Demisemiquaver&#32;=&#32;1&#32;/&#32;32;
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NoteDurationType&#32;Hemidemisemiquaver&#32;=&#32;1&#32;/&#32;64;
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NoteDurationType&#32;Semihemidemisemiquaver&#32;=&#32;1&#32;/&#32;128;
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NoteDurationType&#32;Demisemihemidemisemiquaver&#32;=&#32;1&#32;/&#32;256;
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
138 
139 
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NoteValueType&#32;<link linkend="_struct_dynamic_audio_1_1_note_1a495e3b2c5015739a97b00977af10b262">value</link>;
142 
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NoteDurationType&#32;<link linkend="_struct_dynamic_audio_1_1_note_1a63379e312a71432e2c3d81ebedf2a919">duration</link>;
145 
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_dynamic_audio_1_1_note">Note</link>(NoteValueType&#32;_value,&#32;NoteDurationType&#32;_duration)&#32;:&#32;<link linkend="_struct_dynamic_audio_1_1_note_1a495e3b2c5015739a97b00977af10b262">value</link>(_value),&#32;<link linkend="_struct_dynamic_audio_1_1_note_1a63379e312a71432e2c3d81ebedf2a919">duration</link>(_duration)&#32;{}
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_dynamic_audio_1_1_note">Note</link>(NoteValueType&#32;_value)&#32;:&#32;<link linkend="_struct_dynamic_audio_1_1_note_1a495e3b2c5015739a97b00977af10b262">value</link>(_value),&#32;<link linkend="_struct_dynamic_audio_1_1_note_1a63379e312a71432e2c3d81ebedf2a919">duration</link>(Duration::Semibreve)&#32;{}
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Note()&#32;:&#32;<link linkend="_struct_dynamic_audio_1_1_note_1a495e3b2c5015739a97b00977af10b262">value</link>(Value::<link linkend="_struct_dynamic_audio_1_1_note_1ab81b6ba8f0d63618aa7cf6b6e87b0d23">null</link>),&#32;<link linkend="_struct_dynamic_audio_1_1_note_1a63379e312a71432e2c3d81ebedf2a919">duration</link>(Duration::Semibreve)&#32;{}
149 
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_dynamic_audio_1_1_note_1a8827919f5db76b634058ce1ff14c91a5">transpose</link>(NoteValueType&#32;semitones)&#32;{
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_dynamic_audio_1_1_note_1a495e3b2c5015739a97b00977af10b262">value</link>&#32;=&#32;Value::transpose(<link linkend="_struct_dynamic_audio_1_1_note_1a495e3b2c5015739a97b00977af10b262">value</link>,&#32;semitones);
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
155 
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_struct_dynamic_audio_1_1_note_1ab6afeb3e78f615b0d623b5a27e5c6ce0">calculateFrequency</link>()&#32;{
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Value::calculateFrequency(<link linkend="_struct_dynamic_audio_1_1_note_1a495e3b2c5015739a97b00977af10b262">value</link>);
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
160 
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//implicit&#32;operator&#32;uint8_t&#32;()&#32;const&#32;{&#32;return&#32;value;&#32;}</emphasis>
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//explicit&#32;operator&#32;auto()&#32;const&#32;{&#32;return&#32;value;&#32;}&#32;</emphasis>
163 
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_dynamic_audio_1_1_note">Note</link>&#32;operator+(<emphasis role="keyword">const</emphasis>&#32;NoteValueType&amp;&#32;semitones)&#32;{
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;result&#32;=&#32;<link linkend="_struct_dynamic_audio_1_1_note">Note</link>(<link linkend="_struct_dynamic_audio_1_1_note_1a495e3b2c5015739a97b00977af10b262">value</link>,&#32;<link linkend="_struct_dynamic_audio_1_1_note_1a63379e312a71432e2c3d81ebedf2a919">duration</link>);
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result.transpose(semitones);
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
169 
171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_dynamic_audio_1_1_note">Note</link>&#32;<link linkend="_struct_dynamic_audio_1_1_note_1ab81b6ba8f0d63618aa7cf6b6e87b0d23">null</link>(NoteDurationType&#32;<link linkend="_struct_dynamic_audio_1_1_note_1a63379e312a71432e2c3d81ebedf2a919">duration</link>&#32;=&#32;Duration::Semibreve)&#32;{
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_dynamic_audio_1_1_note">Note</link>(Value::null,&#32;<link linkend="_struct_dynamic_audio_1_1_note_1a63379e312a71432e2c3d81ebedf2a919">duration</link>);
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
174 
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator==(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_dynamic_audio_1_1_note">Note</link>&amp;&#32;lhs,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_dynamic_audio_1_1_note">Note</link>&amp;&#32;rhs)&#32;{
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lhs.<link linkend="_struct_dynamic_audio_1_1_note_1a495e3b2c5015739a97b00977af10b262">value</link>&#32;!=&#32;rhs.<link linkend="_struct_dynamic_audio_1_1_note_1a495e3b2c5015739a97b00977af10b262">value</link>)
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
178 
179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lhs.<link linkend="_struct_dynamic_audio_1_1_note_1a63379e312a71432e2c3d81ebedf2a919">duration</link>&#32;!=&#32;rhs.<link linkend="_struct_dynamic_audio_1_1_note_1a63379e312a71432e2c3d81ebedf2a919">duration</link>)
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
181 
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
184 
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator!=(<emphasis role="keyword">const</emphasis>&#32;Note&amp;&#32;lhs,&#32;<emphasis role="keyword">const</emphasis>&#32;Note&amp;&#32;rhs)&#32;{
186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!operator==(lhs,&#32;rhs);
187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
188 &#32;&#32;&#32;&#32;};
189 }
</programlisting></section>
